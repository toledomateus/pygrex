[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["pygrex"]


[project]
name = "pygrex"
version = "0.0.1"
description = "Explainable Recommenders"
license = {file = "LICENSE.md"}
requires-python = ">=3.11"
dependencies = [
    "ansi2html",
    "appnope",
    "argon2-cffi",
    "async-generator",
    "attrs",
    "backcall",
    "bleach",
    "Brotli",
    "cffi",
    "chardet",
    "click",
    "cycler",
    "dash",
    "dash-core-components",
    "dash-html-components",
    "dash-renderer",
    "dash-table",
    "decorator",
    "defusedxml",
    "entrypoints",
    "Flask",
    "Flask-Compress",
    "future",
    "implicit",
    "importlib-metadata",
    "ipykernel",
    "ipython",
    "ipython-genutils",
    "ipywidgets",
    "itsdangerous",
    "jedi",
    "joblib",
    "jsonschema",
    "jupyter",
    "jupyter-client",
    "jupyter-console",
    "jupyter-core",
    "jupyter-dash",
    "jupyterlab-pygments",
    "jupyterlab-widgets",
    "kiwisolver",
    "llvmlite",
    "matplotlib",
    "mistune",
    "mlxtend",
    "nbclient",
    "nbconvert",
    "nbformat",
    "nest-asyncio",
    "notebook",
    "numba",
    "pandas",
    "pandocfilters",
    "parso",
    "pexpect",
    "pickleshare",
    "Pillow",
    "plotly",
    "prometheus-client",
    "prompt-toolkit",
    "ptyprocess",
    "pycparser",
    "pynndescent",
    "pyparsing",
    "pyrsistent",
    "python-box",
    "python-dateutil",
    "pytz",
    "pyzmq",
    "qtconsole",
    "QtPy",
    "retrying",
    "scikit-learn",
    "seaborn",
    "Send2Trash",
    "terminado",
    "testpath",
    "tornado",
    "torch",
    "tqdm",
    "traitlets",
    "umap-learn",
    "wcwidth",
    "webencodings",
    "widgetsnbextension",
    "zipp"
]

[project.optional-dependencies]
dev = [
  "pytest>=7.0.0",
  "flake8>=4.0.0",
  "black>=22.0.0",
  "isort>=5.10.0",
  "coverage",
  "threadpoolctl",

]


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

target-version = "py312"  # Adjust to your Python version

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "google"  # Accepts: "google", "numpy", or "pep257".